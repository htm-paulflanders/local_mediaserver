// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * @package    local_mediaserver
 * @copyright  2013 Paul Holden (pholden@greenhead.ac.uk)
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 * @id         $Id$
 */

define(['jquery', 'core/ajax', 'core/notification', 'core/str', 'core/templates'],
        function($, Ajax, Notification, Str, Templates) {

    /** Element selectors. */
    var SELECTORS = {
        ACTION: '.local-mediaserver-links-table .action-series',
        ICON:   '.icon'
    };

    /** Element classes. */
    var CSS = {
        DIMMED: 'dimmed_text'
    };

    /**
     * Click event handler for toggle icons
     *
     * @method clickHandle
     * @private
     * @param {Event} event
     */
    var clickHandle = function(event) {
        var promise,
            container = $(event.target).parent(),
            series = container.data('series');

        // Toggle finished state
        series.finished = +!Number(series.finished);

        event.preventDefault();

        // Create AJAX request to web service.
        promise = Ajax.call([{
            methodname: 'local_mediaserver_update_series',
            args: {
                id: series.id,
                finished: series.finished
            }
        }]);

        promise[0].then(function() {
            toggleState(container, series);

            return;
        }).catch(Notification.exception);
    };

    /**
     * Toggle series finished state
     *
     * @method toggleState
     * @private
     * @param {JQuery} container
     * @param {Object} series
     */
    var toggleState = function(container, series) {
        var requiredStrings = [
            {key: 'enable', component: 'moodle'},
            {key: 'disable', component: 'moodle'}
        ];

        // Get required lang strings, and toggle icon/row.
        Str.get_strings(requiredStrings).then(function(strings) {
            var icon, text;

            if (series.finished == 1) {
                icon = 't/show';
                text = strings[0];
            } else {
                icon = 't/hide';
                text = strings[1];
            }

            return Templates.renderPix(icon, 'core', text);
        }).then(function(iconhtml) {
            var row = container.closest('tr');

            row.toggleClass(CSS.DIMMED);

            container.data('series', series);
            Templates.replaceNode(container.find(SELECTORS.ICON), iconhtml, '');

            return;
        }).catch(Notification.exception);
    };

    return /** @alias module:local_mediaserver/series */ {
        // Public variables and functions.
        /**
         * Initialize series links UI
         *
         * @method init
         */
        init: function() {
            $('body').delegate(SELECTORS.ACTION, 'click', clickHandle);

            // Remove the icon links.
            $(SELECTORS.ACTION).removeAttr('href');
        }
    };
});
