<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * @package    local_mediaserver
 * @copyright  2013 Paul Holden (pholden@greenhead.ac.uk)
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 * @id         $Id$
 */

defined('MOODLE_INTERNAL') || die();

use \local_mediaserver\media_schedule as schedule;

/**
 * Unit test for base media schedule class
 *
 * @group greenhead
 * @group local_mediaserver
 */
class local_mediaserver_media_schedule_testcase extends advanced_testcase {

    /**
     * Test cleaning program title
     *
     * @return void
     */
    public function test_clean_program_title() {
        $this->assertEquals('Panorama', schedule::clean_program_title(' Panorama '));

        // Timezone should be removed.
        $this->assertEquals('Panorama', schedule::clean_program_title('(GMT) Panorama'));
        $this->assertEquals('Panorama', schedule::clean_program_title('(BST) Panorama'));

        // Timezone should be preserved as not within brackets.
        $expected = 'GMT is the best';
        $this->assertEquals($expected, schedule::clean_program_title($expected));
    }

    /**
     * Test cleaning episode title
     *
     * @return void
     */
    public function test_clean_episode_title() {
        $this->assertEquals('Episode with space', schedule::clean_episode_title('Program', ' episode with space '));

        // Should return empty string when program and episode title are the same, or episode is empty.
        $title = 'Panorama';
        $this->assertEmpty(schedule::clean_episode_title($title, $title));
        $this->assertEmpty(schedule::clean_episode_title($title, ''));

        // Make sure program title is removed from beginning/end.
        $this->assertEquals('Unit Testing', schedule::clean_episode_title('Dispatches', 'Unit Testing: Dispatches'));
        $this->assertEquals('Unit Testing', schedule::clean_episode_title('Panorama', 'Panorama - Unit Testing'));

        $this->assertEquals('Does some Testing', schedule::clean_episode_title('Postman Pat', 'Postman Pat does some Testing'));
        $this->assertEquals('The Truth', schedule::clean_episode_title('9/11', 'The Truth'));
    }
}
