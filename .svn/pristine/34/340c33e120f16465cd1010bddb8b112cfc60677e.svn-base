<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * @package    local_mediaserver
 * @copyright  2013 Paul Holden (pholden@greenhead.ac.uk)
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 * @id         $Id$
 */

require(dirname(dirname(dirname(dirname(__FILE__)))) . '/config.php');
require_once($CFG->libdir . '/tablelib.php');
require_once($CFG->dirroot . '/local/mediaserver/lib.php');
require_once($CFG->dirroot . '/local/mediaserver/locallib.php');

$page = optional_param('page', 0, PARAM_INT);

$context = context_system::instance();

require_login(SITEID, false);
require_capability('local/mediaserver:add', $context);

$PAGE->set_context($context);
$PAGE->set_pagelayout('standard');
$PAGE->set_url(new local_mediaserver_url('/local/mediaserver/admin/queue.php'));
$PAGE->set_title(get_string('queue', 'local_mediaserver'));

echo $OUTPUT->header();

$where = 'done = :done';
$params = array('done' => 0);

// Normal users can only see their own queued items.
if (! has_capability('moodle/site:config', $context)) {
    $where .= ' AND userid = :userid';
    $params['userid'] = $USER->id;
}

$userfields = get_all_user_name_fields(true, 'u');

$sql = 'SELECT s.*, ' . $userfields . '
          FROM {local_mediaserver_stream} s
          JOIN {user} u ON u.id = s.userid
         WHERE ' . $where . '
      ORDER BY s.submitted DESC, s.title DESC';

$streams = $DB->get_records_sql($sql, $params, $page * LOCAL_MEDIASERVER_MEDIA_PAGING, LOCAL_MEDIASERVER_MEDIA_PAGING);

$table = new flexible_table('local_mediaserver');
$table->define_columns(array('source', 'title', 'user', 'submitted'));
$table->define_headers(array(null, get_string('name'), get_string('user'), get_string('date')));
$table->define_baseurl($PAGE->url);
$table->attributes['class'] = 'flexible table-programs';
$table->setup();

$dateformat = get_string('strftimedatetime', 'langconfig');

foreach ($streams as $stream) {
    $pixicon = local_mediaserver_source_icon($stream->source);
    $icon = $OUTPUT->render($pixicon);

    $title = s($stream->title);
    if ($stream->source == 'upload' && $stream->reference) {
        $download = moodle_url::make_pluginfile_url($context->id, 'local_mediaserver', 'upload', $stream->id, '/', $stream->reference);

        $title = html_writer::link($download, $title);
    } else if ($stream->source == 'epg') {
        $sql = 'SELECT p.*
                  FROM {local_mediaserver_program} p
                  JOIN {local_mediaserver_recording} r ON r.program = p.id
                 WHERE r.stream = :stream';

        $program = $DB->get_record_sql($sql, array('stream' => $stream->id), MUST_EXIST);
        $programlink = new local_mediaserver_url('/local/mediaserver/guide/channel.php',
            array('id' => $program->channel, 't' => $program->timebegin), 'p' . $program->id);

        $title = html_writer::link($programlink, $title);
    }

    $userlink = html_writer::link(new moodle_url('/user/profile.php', array('id' => $stream->userid)), fullname($stream));

    $table->add_data(array($icon, $title, $userlink, userdate($stream->submitted, $dateformat)));
}

$table->print_html();

$count = $DB->count_records('local_mediaserver_stream', $params);

$pagingbar = new paging_bar($count, $page, LOCAL_MEDIASERVER_MEDIA_PAGING, $PAGE->url);
echo $OUTPUT->render($pagingbar);

echo $OUTPUT->footer();
