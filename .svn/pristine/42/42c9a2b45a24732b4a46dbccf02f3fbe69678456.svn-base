<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * @package    local_mediaserver
 * @copyright  2013 Paul Holden (pholden@greenhead.ac.uk)
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 * @id         $Id$
 */

defined('MOODLE_INTERNAL') || die();

use local_mediaserver\phpunit\schedule_download_testcase;

/**
 * Unit test for Atlas API (v4) schedule download method
 *
 * @group greenhead
 * @group local_mediaserver
 */
class mediaschedule_atlasfour_download_testcase extends schedule_download_testcase {

    /**
     * Tests schedule download method using fixtures data (note the API returns an extra programme that overlaps the $finish argument)
     *
     * @return void
     */
    public function test_download() {
        $class = '\\mediaschedule_atlasfour\\definition';
        $fixture = __DIR__ . '/fixtures/hkvb.json';

        // Schedule start/finish was already passed to the API when generating the fixtures data.
        $schedule = $this->download($class, $fixture);
        $this->assertEquals(7, count($schedule));

        $expected = array(
            1435251600 => ['The Simpsons', 'My Mother the Carjacker'],
            1435253400 => ['Hollyoaks', 'Hollyoaks'],
            1435255200 => ['Channel 4 News', 'Channel 4 News'],
            1435258800 => ['Dogs: Their Secret Lives', 'Dogs: Their Secret Lives'],
            1435262400 => ['The Tribe', 'The Tribe'],
            1435266000 => ['Peter Kay: Live & Back on Nights!', 'Peter Kay: Live & Back on Nights! Part Two'],
        );
        foreach ($expected as $timebegin => $titles) {
            $program = array_shift($schedule);

            $this->assertEquals($timebegin, $program->timebegin);
            $this->assertEquals($titles[0], $program->title);
            $this->assertEquals($titles[1], $program->episodetitle);
        }

        // Now test the last program overlapping the schedule finish time (26/06/15 00:00 BST).
        $program = array_shift($schedule);
        $this->assertEquals('Dogging Tales', $program->title);
        $this->assertEquals(1435269900, $program->timebegin);
        $this->assertEquals(1435274100, $program->timeend);
    }
}
